name: Application Pull Request workflow
on:
  workflow_call:
    inputs:
      config_path:
        required: true
        type: string
      database_path:
        required: true
        type: string
      run_npm:
        description: Run NPM install and build
        required: false
        type: boolean
        default: true
    secrets:
      auth_json:
        required: true
jobs:
  app_tests:
    name: Application tests
    runs-on: ubuntu-latest
    env:
      BROADCAST_DRIVER: log
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: json, pdo
          coverage: none

      - name: Prepare env file
        run: php -r "file_exists('.env') || copy('.build/.env.test', '.env');"

      - name: Add HTTP basic auth credentials
        run: echo '${{ secrets.auth_json }}' > $GITHUB_WORKSPACE/auth.json

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --no-progress --prefer-dist --optimize-autoloader

      - name: Run php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --config=${{ inputs.config_path }}/csfixer.php --dry-run --verbose

      - name: Run phpcs
        run: vendor/bin/phpcs -p --standard=${{ inputs.config_path }}/phpcs.xml .

      - name: Prepare the application
        run: php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Setup NPM
        if: ${{ inputs.run_npm }}
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install js libraries
        if: ${{ inputs.run_npm }}
        run: |
          npm ci
          npm run build

      - name: Check passport installer existence
        id: check_passport_files
        uses: andstor/file-existence-action@v2
        with:
          files: "vendor/laravel/passport/src/Console/InstallCommand.php"
          
      - name: Prepare Oauth keys
        if: steps.check_passport_files.outputs.files_exists == 'true'
        run: php artisan passport:keys

      - name: Create DB for tests
        run: touch ${{ inputs.database_path }}

      - name: Run Migration
        run: php artisan migrate -v

      - name: Test with phpunit
        run: vendor/bin/phpunit --config=config/phpunit.xml
