name: Application Pull Request workflow
on:
  workflow_call:
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      BROADCAST_DRIVER: log
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: json, pdo
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Prepare env file
        run: php -r "file_exists('.env') || copy('.env.test', '.env');"

      - name: Add composer GitHub credentials
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --config=vendor/opay-dev/core/src/Config/csfixer.php --dry-run --verbose

      - name: Run phpcs
        run: vendor/bin/phpcs -p --standard=vendor/opay-dev/core/src/Config/phpcs.xml .

      - name: Prepare the application
        run: php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Create DB for tests
        run: touch storage/framework/database.sqlite

      - name: Run Migration
        run: php artisan migrate -v

      - name: Test with phpunit
        run: vendor/bin/phpunit --config=config/phpunit.xml
